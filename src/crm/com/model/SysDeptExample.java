package crm.com.model;

import java.util.ArrayList;
import java.util.List;

public class SysDeptExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected List<Criteria> oredCriteria;
	private Integer limit;
	private Integer offset;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public SysDeptExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	public void setLimit(Integer limit) {
		this.limit = limit;
	}

	public Integer getLimit() {
		return limit;
	}

	public void setOffset(Integer offset) {
		this.offset = offset;
	}

	public Integer getOffset() {
		return offset;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andParentidIsNull() {
			addCriterion("parentid is null");
			return (Criteria) this;
		}

		public Criteria andParentidIsNotNull() {
			addCriterion("parentid is not null");
			return (Criteria) this;
		}

		public Criteria andParentidEqualTo(Integer value) {
			addCriterion("parentid =", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotEqualTo(Integer value) {
			addCriterion("parentid <>", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidGreaterThan(Integer value) {
			addCriterion("parentid >", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidGreaterThanOrEqualTo(Integer value) {
			addCriterion("parentid >=", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidLessThan(Integer value) {
			addCriterion("parentid <", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidLessThanOrEqualTo(Integer value) {
			addCriterion("parentid <=", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidIn(List<Integer> values) {
			addCriterion("parentid in", values, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotIn(List<Integer> values) {
			addCriterion("parentid not in", values, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidBetween(Integer value1, Integer value2) {
			addCriterion("parentid between", value1, value2, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotBetween(Integer value1, Integer value2) {
			addCriterion("parentid not between", value1, value2, "parentid");
			return (Criteria) this;
		}

		public Criteria andIconClsIsNull() {
			addCriterion("iconCls is null");
			return (Criteria) this;
		}

		public Criteria andIconClsIsNotNull() {
			addCriterion("iconCls is not null");
			return (Criteria) this;
		}

		public Criteria andIconClsEqualTo(String value) {
			addCriterion("iconCls =", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsNotEqualTo(String value) {
			addCriterion("iconCls <>", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsGreaterThan(String value) {
			addCriterion("iconCls >", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsGreaterThanOrEqualTo(String value) {
			addCriterion("iconCls >=", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsLessThan(String value) {
			addCriterion("iconCls <", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsLessThanOrEqualTo(String value) {
			addCriterion("iconCls <=", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsLike(String value) {
			addCriterion("iconCls like", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsNotLike(String value) {
			addCriterion("iconCls not like", value, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsIn(List<String> values) {
			addCriterion("iconCls in", values, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsNotIn(List<String> values) {
			addCriterion("iconCls not in", values, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsBetween(String value1, String value2) {
			addCriterion("iconCls between", value1, value2, "iconCls");
			return (Criteria) this;
		}

		public Criteria andIconClsNotBetween(String value1, String value2) {
			addCriterion("iconCls not between", value1, value2, "iconCls");
			return (Criteria) this;
		}

		public Criteria andPtopidIsNull() {
			addCriterion("ptopid is null");
			return (Criteria) this;
		}

		public Criteria andPtopidIsNotNull() {
			addCriterion("ptopid is not null");
			return (Criteria) this;
		}

		public Criteria andPtopidEqualTo(Integer value) {
			addCriterion("ptopid =", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidNotEqualTo(Integer value) {
			addCriterion("ptopid <>", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidGreaterThan(Integer value) {
			addCriterion("ptopid >", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidGreaterThanOrEqualTo(Integer value) {
			addCriterion("ptopid >=", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidLessThan(Integer value) {
			addCriterion("ptopid <", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidLessThanOrEqualTo(Integer value) {
			addCriterion("ptopid <=", value, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidIn(List<Integer> values) {
			addCriterion("ptopid in", values, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidNotIn(List<Integer> values) {
			addCriterion("ptopid not in", values, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidBetween(Integer value1, Integer value2) {
			addCriterion("ptopid between", value1, value2, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPtopidNotBetween(Integer value1, Integer value2) {
			addCriterion("ptopid not between", value1, value2, "ptopid");
			return (Criteria) this;
		}

		public Criteria andPthirdIsNull() {
			addCriterion("pthird is null");
			return (Criteria) this;
		}

		public Criteria andPthirdIsNotNull() {
			addCriterion("pthird is not null");
			return (Criteria) this;
		}

		public Criteria andPthirdEqualTo(Integer value) {
			addCriterion("pthird =", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdNotEqualTo(Integer value) {
			addCriterion("pthird <>", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdGreaterThan(Integer value) {
			addCriterion("pthird >", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdGreaterThanOrEqualTo(Integer value) {
			addCriterion("pthird >=", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdLessThan(Integer value) {
			addCriterion("pthird <", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdLessThanOrEqualTo(Integer value) {
			addCriterion("pthird <=", value, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdIn(List<Integer> values) {
			addCriterion("pthird in", values, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdNotIn(List<Integer> values) {
			addCriterion("pthird not in", values, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdBetween(Integer value1, Integer value2) {
			addCriterion("pthird between", value1, value2, "pthird");
			return (Criteria) this;
		}

		public Criteria andPthirdNotBetween(Integer value1, Integer value2) {
			addCriterion("pthird not between", value1, value2, "pthird");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sysdept
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sysdept
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 18 15:28:09 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}