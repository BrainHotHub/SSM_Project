package crm.com.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class VisitLogExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected List<Criteria> oredCriteria;
	private Integer limit;
	private Integer offset;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public VisitLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	public void setLimit(Integer limit) {
		this.limit = limit;
	}

	public Integer getLimit() {
		return limit;
	}

	public void setOffset(Integer offset) {
		this.offset = offset;
	}

	public Integer getOffset() {
		return offset;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCustomeridIsNull() {
			addCriterion("customerid is null");
			return (Criteria) this;
		}

		public Criteria andCustomeridIsNotNull() {
			addCriterion("customerid is not null");
			return (Criteria) this;
		}

		public Criteria andCustomeridEqualTo(Integer value) {
			addCriterion("customerid =", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridNotEqualTo(Integer value) {
			addCriterion("customerid <>", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridGreaterThan(Integer value) {
			addCriterion("customerid >", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridGreaterThanOrEqualTo(Integer value) {
			addCriterion("customerid >=", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridLessThan(Integer value) {
			addCriterion("customerid <", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridLessThanOrEqualTo(Integer value) {
			addCriterion("customerid <=", value, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridIn(List<Integer> values) {
			addCriterion("customerid in", values, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridNotIn(List<Integer> values) {
			addCriterion("customerid not in", values, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridBetween(Integer value1, Integer value2) {
			addCriterion("customerid between", value1, value2, "customerid");
			return (Criteria) this;
		}

		public Criteria andCustomeridNotBetween(Integer value1, Integer value2) {
			addCriterion("customerid not between", value1, value2, "customerid");
			return (Criteria) this;
		}

		public Criteria andIdcardIsNull() {
			addCriterion("idcard is null");
			return (Criteria) this;
		}

		public Criteria andIdcardIsNotNull() {
			addCriterion("idcard is not null");
			return (Criteria) this;
		}

		public Criteria andIdcardEqualTo(String value) {
			addCriterion("idcard =", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardNotEqualTo(String value) {
			addCriterion("idcard <>", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardGreaterThan(String value) {
			addCriterion("idcard >", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardGreaterThanOrEqualTo(String value) {
			addCriterion("idcard >=", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardLessThan(String value) {
			addCriterion("idcard <", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardLessThanOrEqualTo(String value) {
			addCriterion("idcard <=", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardLike(String value) {
			addCriterion("idcard like", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardNotLike(String value) {
			addCriterion("idcard not like", value, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardIn(List<String> values) {
			addCriterion("idcard in", values, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardNotIn(List<String> values) {
			addCriterion("idcard not in", values, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardBetween(String value1, String value2) {
			addCriterion("idcard between", value1, value2, "idcard");
			return (Criteria) this;
		}

		public Criteria andIdcardNotBetween(String value1, String value2) {
			addCriterion("idcard not between", value1, value2, "idcard");
			return (Criteria) this;
		}

		public Criteria andVdateIsNull() {
			addCriterion("vdate is null");
			return (Criteria) this;
		}

		public Criteria andVdateIsNotNull() {
			addCriterion("vdate is not null");
			return (Criteria) this;
		}

		public Criteria andVdateEqualTo(Date value) {
			addCriterionForJDBCDate("vdate =", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("vdate <>", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateGreaterThan(Date value) {
			addCriterionForJDBCDate("vdate >", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("vdate >=", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateLessThan(Date value) {
			addCriterionForJDBCDate("vdate <", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("vdate <=", value, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateIn(List<Date> values) {
			addCriterionForJDBCDate("vdate in", values, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("vdate not in", values, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("vdate between", value1, value2, "vdate");
			return (Criteria) this;
		}

		public Criteria andVdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("vdate not between", value1, value2, "vdate");
			return (Criteria) this;
		}

		public Criteria andVtypeIsNull() {
			addCriterion("vtype is null");
			return (Criteria) this;
		}

		public Criteria andVtypeIsNotNull() {
			addCriterion("vtype is not null");
			return (Criteria) this;
		}

		public Criteria andVtypeEqualTo(String value) {
			addCriterion("vtype =", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeNotEqualTo(String value) {
			addCriterion("vtype <>", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeGreaterThan(String value) {
			addCriterion("vtype >", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeGreaterThanOrEqualTo(String value) {
			addCriterion("vtype >=", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeLessThan(String value) {
			addCriterion("vtype <", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeLessThanOrEqualTo(String value) {
			addCriterion("vtype <=", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeLike(String value) {
			addCriterion("vtype like", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeNotLike(String value) {
			addCriterion("vtype not like", value, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeIn(List<String> values) {
			addCriterion("vtype in", values, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeNotIn(List<String> values) {
			addCriterion("vtype not in", values, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeBetween(String value1, String value2) {
			addCriterion("vtype between", value1, value2, "vtype");
			return (Criteria) this;
		}

		public Criteria andVtypeNotBetween(String value1, String value2) {
			addCriterion("vtype not between", value1, value2, "vtype");
			return (Criteria) this;
		}

		public Criteria andVremarkIsNull() {
			addCriterion("vremark is null");
			return (Criteria) this;
		}

		public Criteria andVremarkIsNotNull() {
			addCriterion("vremark is not null");
			return (Criteria) this;
		}

		public Criteria andVremarkEqualTo(String value) {
			addCriterion("vremark =", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkNotEqualTo(String value) {
			addCriterion("vremark <>", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkGreaterThan(String value) {
			addCriterion("vremark >", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkGreaterThanOrEqualTo(String value) {
			addCriterion("vremark >=", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkLessThan(String value) {
			addCriterion("vremark <", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkLessThanOrEqualTo(String value) {
			addCriterion("vremark <=", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkLike(String value) {
			addCriterion("vremark like", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkNotLike(String value) {
			addCriterion("vremark not like", value, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkIn(List<String> values) {
			addCriterion("vremark in", values, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkNotIn(List<String> values) {
			addCriterion("vremark not in", values, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkBetween(String value1, String value2) {
			addCriterion("vremark between", value1, value2, "vremark");
			return (Criteria) this;
		}

		public Criteria andVremarkNotBetween(String value1, String value2) {
			addCriterion("vremark not between", value1, value2, "vremark");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table visitlog
	 * @mbggenerated  Wed Aug 24 15:47:00 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visitlog
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 18 15:28:09 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}